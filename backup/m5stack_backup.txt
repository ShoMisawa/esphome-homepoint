esphome:
  name: m5stack-fire
  platform: ESP32
  board: m5stack-core-esp32

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "M5Stack-Fire Fallback Hotspot"
    password: "xeIyC1JsQ8xj"

captive_portal:

mqtt:
    broker: 192.168.86.30
    username: !secret mqtt_user
    password: !secret mqtt_password 

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret ota_password

ota:
  password: !secret ota_password

spi:
  clk_pin: 18
  mosi_pin: 23
  miso_pin: 19
  
font:
  - file: "./fonts/Roboto-Medium.ttf"
    id: my_font_15
    size: 15
  - file: "./fonts/Roboto-Medium.ttf"
    id: my_font_20
    size: 20
  - file: "./fonts//materialdesignicons-webfont.ttf"
    id: icon_font
    size: 40
    glyphs: [
      "\U000F050F",  # mdi-thermometer
      "\U000F0335",  # mdi-lightbulb
      "\U000F06D9",  # mdi-garage
      "\U000F10AF",  # mdi-door-closed-lock
      "\U000F0210",  # mdi-fan
      "\U000F06DA",  # mdi-garage-open
      "\U000F081D",  # mdi-fan-off
      "\U000F06E8",  # mdi-lightbulb
      "\U000F081C"   # mdi-door-open
      ]

display:
  - platform: ili9341
    id: m5stack_display
    model: M5Stack
    cs_pin: 14
    dc_pin: 27
    led_pin: 32
    reset_pin: 33
    rotation: 0
    pages:
      - id: page1
        lambda: |-
          it.line(0,120,320,120);
          it.line(106.6666,0,106.6666,240);
          it.line(213.3333,0,213.6666, 240);
          
          it.rectangle(1,121,105.6666,239);
          it.rectangle(2,120+2,106.6666-2,240-2);
          
          
          it.printf(55, 20, id(my_font_15), TextAlign::CENTER, "Front Door");
          
          if (id(mysensor).state == "locked") {
            it.printf(55, 60, id(icon_font), TextAlign::CENTER, "\U000F10AF");
          }else{
            it.printf(55, 60, id(icon_font), TextAlign::CENTER, "\U000F081C");
          }
          
          it.printf(25, 85, id(my_font_20), "%s", id(mysensor).state.c_str());
          
          
          
          it.printf(55+106.6666, 20, id(my_font_15), TextAlign::CENTER, "Left Door");
          
          if (id(leftGarage).state == "closed") {
            it.printf(55+106.6666, 60, id(icon_font), TextAlign::CENTER, "\U000F06D9");
          } else{
            it.printf(55+106.6666, 60, id(icon_font), TextAlign::CENTER, "\U000F06DA");
          }
          
          it.printf(25+106.6666, 85, id(my_font_20), "%s", id(leftGarage).state.c_str());
          
          if (id(rightGarage).state == "closed") {
            it.printf(55+106.6666*2, 60, id(icon_font), TextAlign::CENTER, "\U000F06D9");
          } else {
            it.printf(55+106.6666*2, 60, id(icon_font), TextAlign::CENTER, "\U000F06DA");
          }
          
          it.printf(55+106.6666*2, 20, id(my_font_15), TextAlign::CENTER, "Right Door");
          it.printf(25+106.6666*2, 85, id(my_font_20), "%s", id(rightGarage).state.c_str());
          
          it.printf(55, 20+130, id(my_font_15), TextAlign::CENTER, "Hector 1");
          it.printf(55, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0335");
          
          it.printf(55+106.6666, 20+130, id(my_font_15), TextAlign::CENTER, "Hector 2 ");
          it.printf(55+106.6666, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0335");
          
          it.printf(55+106.6666*2, 20+130, id(my_font_15), TextAlign::CENTER, "Hector 3 ");
          it.printf(55+106.6666*2, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0335");          
          
      - id: page2
        lambda: |-
          it.line(0,120,320,120);
          it.line(106.6666,0,106.6666,240);
          it.line(213.3333,0,213.6666, 240);
          
          it.rectangle(1+106.6666,121,106.6666-1,239);
          it.rectangle(2+106.6666,120+2,106.6666-2,240-2);
          
          it.printf(55, 20, id(my_font_15), TextAlign::CENTER, "Front Door");
          
          if (id(mysensor).state == "locked") {
            it.printf(55, 60, id(icon_font), TextAlign::CENTER, "\U000F10AF");
          }else{
            it.printf(55, 60, id(icon_font), TextAlign::CENTER, "\U000F081C");
          }
          
          it.printf(25, 85, id(my_font_20), "%s", id(mysensor).state.c_str());
          
          
          
          it.printf(55+106.6666, 20, id(my_font_15), TextAlign::CENTER, "Left Door");
          
          if (id(leftGarage).state == "closed") {
            it.printf(55+106.6666, 60, id(icon_font), TextAlign::CENTER, "\U000F06D9");
          } else{
            it.printf(55+106.6666, 60, id(icon_font), TextAlign::CENTER, "\U000F06DA");
          }
          
          it.printf(25+106.6666, 85, id(my_font_20), "%s", id(leftGarage).state.c_str());
          
          if (id(rightGarage).state == "closed") {
            it.printf(55+106.6666*2, 60, id(icon_font), TextAlign::CENTER, "\U000F06D9");
          } else {
            it.printf(55+106.6666*2, 60, id(icon_font), TextAlign::CENTER, "\U000F06DA");
          }
          
          it.printf(55+106.6666*2, 20, id(my_font_15), TextAlign::CENTER, "Right Door");
          it.printf(25+106.6666*2, 85, id(my_font_20), "%s", id(rightGarage).state.c_str());
          
          it.printf(55, 20+130, id(my_font_15), TextAlign::CENTER, "Hector 1");
          it.printf(55, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0335");
          
          it.printf(55+106.6666, 20+130, id(my_font_15), TextAlign::CENTER, "Hector 2 ");
          it.printf(55+106.6666, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0335");
          
          it.printf(55+106.6666*2, 20+130, id(my_font_15), TextAlign::CENTER, "Hector 3 ");
          it.printf(55+106.6666*2, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0335");     
          
      - id: page3
        lambda: |-
          it.line(0,120,320,120);
          it.line(106.6666,0,106.6666,240);
          it.line(213.3333,0,213.6666, 240);
          
          it.rectangle(1+106.6666*2,121,106.6666-1,239);
          it.rectangle(2+106.6666*2,120+2,106.6666-2,240-2);

          it.printf(55, 20, id(my_font_15), TextAlign::CENTER, "Front Door");
          
          if (id(mysensor).state == "locked") {
            it.printf(55, 60, id(icon_font), TextAlign::CENTER, "\U000F10AF");
          }else{
            it.printf(55, 60, id(icon_font), TextAlign::CENTER, "\U000F081C");
          }
          
          it.printf(25, 85, id(my_font_20), "%s", id(mysensor).state.c_str());
          
          
          
          it.printf(55+106.6666, 20, id(my_font_15), TextAlign::CENTER, "Left Door");
          
          if (id(leftGarage).state == "closed") {
            it.printf(55+106.6666, 60, id(icon_font), TextAlign::CENTER, "\U000F06D9");
          } else{
            it.printf(55+106.6666, 60, id(icon_font), TextAlign::CENTER, "\U000F06DA");
          }
          
          it.printf(25+106.6666, 85, id(my_font_20), "%s", id(leftGarage).state.c_str());
          
          if (id(rightGarage).state == "closed") {
            it.printf(55+106.6666*2, 60, id(icon_font), TextAlign::CENTER, "\U000F06D9");
          } else {
            it.printf(55+106.6666*2, 60, id(icon_font), TextAlign::CENTER, "\U000F06DA");
          }
          
          it.printf(55+106.6666*2, 20, id(my_font_15), TextAlign::CENTER, "Right Door");
          it.printf(25+106.6666*2, 85, id(my_font_20), "%s", id(rightGarage).state.c_str());
          
          it.printf(55, 20+130, id(my_font_15), TextAlign::CENTER, "Hector 1");
          it.printf(55, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0335");
          
          it.printf(55+106.6666, 20+130, id(my_font_15), TextAlign::CENTER, "Hector 2 ");
          it.printf(55+106.6666, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0335");
          
          it.printf(55+106.6666*2, 20+130, id(my_font_15), TextAlign::CENTER, "Hector 3 ");
          it.printf(55+106.6666*2, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0335");     
          
      - id: page4
        lambda: |-
          it.line(0,120,320,120);
          it.line(106.6666,0,106.6666,240);
          it.line(213.3333,0,213.6666, 240);

          it.printf(55, 60, id(icon_font), TextAlign::CENTER, "\U000F050F");
          it.printf(55, 20, id(my_font_15), TextAlign::CENTER, "Office");
          it.printf(25, 85, id(my_font_20), "%s F", id(officeTemp).state.c_str());
          
          it.printf(55+106.6666, 60, id(icon_font), TextAlign::CENTER, "\U000F06D9");
          it.printf(55+106.6666, 20, id(my_font_15), TextAlign::CENTER, "Left Door");
          it.printf(25+106.6666, 85, id(my_font_20), "%s", id(leftGarage).state.c_str());
          
          it.printf(55+106.6666*2, 60, id(icon_font), TextAlign::CENTER, "\U000F06D9");
          it.printf(55+106.6666*2, 20, id(my_font_15), TextAlign::CENTER, "Right Door");
          it.printf(25+106.6666*2, 85, id(my_font_20), "%s", id(rightGarage).state.c_str());
          
          
          it.printf(55, 20+130, id(my_font_15), TextAlign::CENTER, "Fan");
          
          it.printf(45, 85+130, id(my_font_20), "%s", id(floorFan).state.c_str());
          
          if (id(floorFan).state == "on") {
            it.printf(55, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0210");
          } else {
            it.printf(55, 60+130, id(icon_font), TextAlign::CENTER, "\U000F081D");
          }
          
          
          
          it.printf(55+106.6666, 20+130, id(my_font_15), TextAlign::CENTER, "Fan");
          it.printf(55+106.6666, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0210");
          it.printf(45+106.6666, 85+130, id(my_font_20), "%s", id(deskFan).state.c_str());

          it.printf(55+106.6666*2, 20+130, id(my_font_15), TextAlign::CENTER, "Light");
          
          
          
          if (id(officeLight).state == "on") {
            it.printf(55+106.6666*2, 60+130, id(icon_font), TextAlign::CENTER, "\U000F0335"); 
          } else {
            it.printf(55+106.6666*2, 60+130, id(icon_font), TextAlign::CENTER, "\U000F06E8"); 
          }
          
            
          it.printf(45+106.6666*2, 85+130, id(my_font_20), "%s", id(officeLight).state.c_str());


    

    
text_sensor:
  - platform: mqtt_subscribe
    name: "Data from topic"
    id: mysensor
    topic: the/topic
  - platform: mqtt_subscribe
    name: "Left Garage Door"
    id: leftGarage
    topic: garage/left
  - platform: mqtt_subscribe
    name: "Right Garage Door"
    id: rightGarage
    topic: garage/right
  - platform: mqtt_subscribe
    name: "Office Temp"
    id: officeTemp
    topic: office/temp
  - platform: mqtt_subscribe
    name: "Office Floor Fan"
    id: floorFan
    topic: office/floorFan
  - platform: mqtt_subscribe
    name: "Office Temp"
    id: deskFan
    topic: office/deskFan
  - platform: mqtt_subscribe
    name: "Office Light"
    id: officeLight
    topic: office/light
    
# Button to toggle the display backlight
binary_sensor:
  - platform: gpio
    id: M5_BtnB
    pin:
      number: 38
      inverted: true
    on_click:
      - if:
          condition:
            display.is_displaying_page: page1
          then:
            - homeassistant.service:
                service: scene.turn_on
                data_template:
                  entity_id: scene.livingroom_light_off
      - if:
          condition:
            display.is_displaying_page: page2
          then:
            - homeassistant.service:
                service: scene.turn_on
                data_template:
                  entity_id: scene.livingroom_light_11pm
      - if:
          condition:
            display.is_displaying_page: page3
          then:
            - homeassistant.service:
                service: scene.turn_on
                data_template:
                  entity_id: scene.livingroom_light_sunset_on
                  
  - platform: gpio
    id: M5_button_A
    pin:
      number: 39
      inverted: true
    on_click:
      then:
        - display.page.show_previous: m5stack_display
        - component.update: m5stack_display
  - platform: gpio
    id: M5_button_C
    pin:
      number: 37
      inverted: true
    on_click:
      then:
        - display.page.show_next: m5stack_display
        - component.update: m5stack_display
        
# GPIO pin of the display backlight
switch:
  - platform: gpio
    pin: 32
    name: "Backlight"
    id: backlight
    restore_mode: ALWAYS_ON